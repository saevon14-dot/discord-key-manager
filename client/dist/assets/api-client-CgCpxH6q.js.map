{"version":3,"file":"api-client-CgCpxH6q.js","sources":["../../src/lib/api-client.ts"],"sourcesContent":["// GitHub Pages API Client - Works with external APIs or mock data\nconst IS_GITHUB_PAGES = window.location.hostname.includes('github.io');\nconst API_BASE = IS_GITHUB_PAGES \n  ? 'https://api.github.com' // Fallback API or your own serverless functions\n  : '';\n\nexport class GitHubPagesApiClient {\n  private mockData = {\n    botStatus: {\n      online: false,\n      uptime: 0,\n      serverCount: 0,\n      latency: -1,\n      lastStarted: new Date().toISOString()\n    },\n    dashboardStats: {\n      totalKeys: 0,\n      todayGenerated: 0,\n      activeRoles: 0,\n      uptime: 0,\n      keyPools: {\n        day: 0,\n        week: 0,\n        month: 0,\n        '3month': 0,\n        '6month': 0,\n        lifetime: 0,\n        custom: 0\n      }\n    },\n    roles: [] as any[],\n    keys: [] as any[],\n    settings: [] as any[],\n    logs: [] as any[]\n  };\n\n  private storage = {\n    get: (key: string) => {\n      const data = localStorage.getItem(`discord-keys-${key}`);\n      return data ? JSON.parse(data) : null;\n    },\n    set: (key: string, value: any) => {\n      localStorage.setItem(`discord-keys-${key}`, JSON.stringify(value));\n    }\n  };\n\n  async request(endpoint: string, options: RequestInit = {}) {\n    if (!IS_GITHUB_PAGES) {\n      // Use normal API when not on GitHub Pages\n      const response = await fetch(`/api${endpoint}`, options);\n      if (!response.ok) throw new Error(`API Error: ${response.status}`);\n      return response.json();\n    }\n\n    // GitHub Pages mode - use localStorage for persistence\n    const method = options.method || 'GET';\n    const [, resource, action] = endpoint.split('/');\n\n    switch (method) {\n      case 'GET':\n        return this.handleGet(resource, action, endpoint);\n      case 'POST':\n        return this.handlePost(resource, action, options.body as string);\n      case 'DELETE':\n        return this.handleDelete(resource, action, endpoint);\n      default:\n        return this.mockData;\n    }\n  }\n\n  private handleGet(resource: string, action?: string, fullEndpoint?: string) {\n    switch (resource) {\n      case 'bot':\n        if (action === 'status') {\n          const stored = this.storage.get('botStatus');\n          return stored || this.mockData.botStatus;\n        }\n        break;\n      \n      case 'dashboard':\n        if (action === 'stats') {\n          const stored = this.storage.get('dashboardStats');\n          return stored || this.mockData.dashboardStats;\n        }\n        break;\n      \n      case 'roles':\n        return this.storage.get('roles') || this.mockData.roles;\n      \n      case 'keys':\n        const keys = this.storage.get('keys') || this.mockData.keys;\n        if (fullEndpoint?.includes('type=')) {\n          const type = fullEndpoint.split('type=')[1];\n          return keys.filter((key: any) => key.type === type);\n        }\n        return keys;\n      \n      case 'settings':\n        return this.storage.get('settings') || this.mockData.settings;\n      \n      case 'logs':\n        return this.storage.get('logs') || this.mockData.logs;\n      \n      default:\n        return {};\n    }\n  }\n\n  private handlePost(resource: string, action?: string, body?: string) {\n    const data = body ? JSON.parse(body) : {};\n    \n    switch (resource) {\n      case 'bot':\n        if (action === 'start') {\n          const botStatus = {\n            ...this.mockData.botStatus,\n            online: true,\n            lastStarted: new Date().toISOString()\n          };\n          this.storage.set('botStatus', botStatus);\n          return { success: true, message: 'Bot started successfully (GitHub Pages Demo)' };\n        }\n        if (action === 'stop') {\n          const botStatus = { ...this.mockData.botStatus, online: false };\n          this.storage.set('botStatus', botStatus);\n          return { success: true, message: 'Bot stopped successfully (GitHub Pages Demo)' };\n        }\n        break;\n      \n      case 'roles':\n        const roles = this.storage.get('roles') || [];\n        const newRole = {\n          id: Math.random().toString(36).substr(2, 9),\n          ...data,\n          createdAt: new Date().toISOString()\n        };\n        roles.push(newRole);\n        this.storage.set('roles', roles);\n        return newRole;\n      \n      case 'keys':\n        const keys = this.storage.get('keys') || [];\n        const newKeys = data.keys.map((keyData: any) => ({\n          id: Math.random().toString(36).substr(2, 9),\n          ...keyData,\n          status: 'available',\n          createdAt: new Date().toISOString(),\n          usedAt: null,\n          usedBy: null\n        }));\n        keys.push(...newKeys);\n        this.storage.set('keys', keys);\n        return newKeys;\n      \n      case 'settings':\n        const settings = this.storage.get('settings') || [];\n        const existingIndex = settings.findIndex((s: any) => s.key === data.key);\n        const setting = {\n          id: Math.random().toString(36).substr(2, 9),\n          ...data,\n          updatedAt: new Date().toISOString()\n        };\n        \n        if (existingIndex >= 0) {\n          settings[existingIndex] = setting;\n        } else {\n          settings.push(setting);\n        }\n        this.storage.set('settings', settings);\n        return setting;\n      \n      default:\n        return { success: true };\n    }\n  }\n\n  private handleDelete(resource: string, action?: string, endpoint?: string) {\n    switch (resource) {\n      case 'keys':\n        const keyId = endpoint?.split('/').pop();\n        if (keyId) {\n          const keys = this.storage.get('keys') || [];\n          const filteredKeys = keys.filter((key: any) => key.id !== keyId);\n          this.storage.set('keys', filteredKeys);\n          return { success: true };\n        }\n        break;\n      \n      case 'roles':\n        const roleId = endpoint?.split('/').pop();\n        if (roleId) {\n          const roles = this.storage.get('roles') || [];\n          const filteredRoles = roles.filter((role: any) => role.id !== roleId);\n          this.storage.set('roles', filteredRoles);\n          return { success: true };\n        }\n        break;\n      \n      default:\n        return { success: true };\n    }\n  }\n}\n\nexport const apiClient = new GitHubPagesApiClient();"],"names":["IS_GITHUB_PAGES","GitHubPagesApiClient","key","data","value","endpoint","options","response","method","resource","action","fullEndpoint","keys","type","body","botStatus","roles","newRole","newKeys","keyData","settings","existingIndex","s","setting","keyId","filteredKeys","roleId","filteredRoles","role","apiClient"],"mappings":"AACA,MAAMA,EAAkB,OAAO,SAAS,SAAS,SAAS,WAAW,EAK9D,MAAMC,CAAqB,CAA3B,aAAA,CACL,KAAQ,SAAW,CACjB,UAAW,CACT,OAAQ,GACR,OAAQ,EACR,YAAa,EACb,QAAS,GACT,YAAa,IAAI,KAAK,EAAE,YAAY,CACtC,EACA,eAAgB,CACd,UAAW,EACX,eAAgB,EAChB,YAAa,EACb,OAAQ,EACR,SAAU,CACR,IAAK,EACL,KAAM,EACN,MAAO,EACP,SAAU,EACV,SAAU,EACV,SAAU,EACV,OAAQ,CAAA,CAEZ,EACA,MAAO,CAAC,EACR,KAAM,CAAC,EACP,SAAU,CAAC,EACX,KAAM,CAAA,CACR,EAEA,KAAQ,QAAU,CAChB,IAAMC,GAAgB,CACpB,MAAMC,EAAO,aAAa,QAAQ,gBAAgBD,CAAG,EAAE,EACvD,OAAOC,EAAO,KAAK,MAAMA,CAAI,EAAI,IACnC,EACA,IAAK,CAACD,EAAaE,IAAe,CAChC,aAAa,QAAQ,gBAAgBF,CAAG,GAAI,KAAK,UAAUE,CAAK,CAAC,CAAA,CAErE,CAAA,CAEA,MAAM,QAAQC,EAAkBC,EAAuB,GAAI,CACzD,GAAI,CAACN,EAAiB,CAEpB,MAAMO,EAAW,MAAM,MAAM,OAAOF,CAAQ,GAAIC,CAAO,EACnD,GAAA,CAACC,EAAS,GAAI,MAAM,IAAI,MAAM,cAAcA,EAAS,MAAM,EAAE,EACjE,OAAOA,EAAS,KAAK,CAAA,CAIjB,MAAAC,EAASF,EAAQ,QAAU,MAC3B,CAAA,CAAGG,EAAUC,CAAM,EAAIL,EAAS,MAAM,GAAG,EAE/C,OAAQG,EAAQ,CACd,IAAK,MACH,OAAO,KAAK,UAAUC,EAAUC,EAAQL,CAAQ,EAClD,IAAK,OACH,OAAO,KAAK,WAAWI,EAAUC,EAAQJ,EAAQ,IAAc,EACjE,IAAK,SACH,OAAO,KAAK,aAAaG,EAAUC,EAAQL,CAAQ,EACrD,QACE,OAAO,KAAK,QAAA,CAChB,CAGM,UAAUI,EAAkBC,EAAiBC,EAAuB,CAC1E,OAAQF,EAAU,CAChB,IAAK,MACH,GAAIC,IAAW,SAEN,OADQ,KAAK,QAAQ,IAAI,WAAW,GAC1B,KAAK,SAAS,UAEjC,MAEF,IAAK,YACH,GAAIA,IAAW,QAEN,OADQ,KAAK,QAAQ,IAAI,gBAAgB,GAC/B,KAAK,SAAS,eAEjC,MAEF,IAAK,QACH,OAAO,KAAK,QAAQ,IAAI,OAAO,GAAK,KAAK,SAAS,MAEpD,IAAK,OACH,MAAME,EAAO,KAAK,QAAQ,IAAI,MAAM,GAAK,KAAK,SAAS,KACnD,GAAAD,GAAA,MAAAA,EAAc,SAAS,SAAU,CACnC,MAAME,EAAOF,EAAa,MAAM,OAAO,EAAE,CAAC,EAC1C,OAAOC,EAAK,OAAQV,GAAaA,EAAI,OAASW,CAAI,CAAA,CAE7C,OAAAD,EAET,IAAK,WACH,OAAO,KAAK,QAAQ,IAAI,UAAU,GAAK,KAAK,SAAS,SAEvD,IAAK,OACH,OAAO,KAAK,QAAQ,IAAI,MAAM,GAAK,KAAK,SAAS,KAEnD,QACE,MAAO,CAAC,CAAA,CACZ,CAGM,WAAWH,EAAkBC,EAAiBI,EAAe,CACnE,MAAMX,EAAOW,EAAO,KAAK,MAAMA,CAAI,EAAI,CAAC,EAExC,OAAQL,EAAU,CAChB,IAAK,MACH,GAAIC,IAAW,QAAS,CACtB,MAAMK,EAAY,CAChB,GAAG,KAAK,SAAS,UACjB,OAAQ,GACR,YAAa,IAAI,KAAK,EAAE,YAAY,CACtC,EACK,YAAA,QAAQ,IAAI,YAAaA,CAAS,EAChC,CAAE,QAAS,GAAM,QAAS,8CAA+C,CAAA,CAElF,GAAIL,IAAW,OAAQ,CACrB,MAAMK,EAAY,CAAE,GAAG,KAAK,SAAS,UAAW,OAAQ,EAAM,EACzD,YAAA,QAAQ,IAAI,YAAaA,CAAS,EAChC,CAAE,QAAS,GAAM,QAAS,8CAA+C,CAAA,CAElF,MAEF,IAAK,QACH,MAAMC,EAAQ,KAAK,QAAQ,IAAI,OAAO,GAAK,CAAC,EACtCC,EAAU,CACd,GAAI,KAAK,SAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,EAC1C,GAAGd,EACH,UAAW,IAAI,KAAK,EAAE,YAAY,CACpC,EACA,OAAAa,EAAM,KAAKC,CAAO,EACb,KAAA,QAAQ,IAAI,QAASD,CAAK,EACxBC,EAET,IAAK,OACH,MAAML,EAAO,KAAK,QAAQ,IAAI,MAAM,GAAK,CAAC,EACpCM,EAAUf,EAAK,KAAK,IAAKgB,IAAkB,CAC/C,GAAI,KAAK,SAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,EAC1C,GAAGA,EACH,OAAQ,YACR,UAAW,IAAI,KAAK,EAAE,YAAY,EAClC,OAAQ,KACR,OAAQ,IAAA,EACR,EACG,OAAAP,EAAA,KAAK,GAAGM,CAAO,EACf,KAAA,QAAQ,IAAI,OAAQN,CAAI,EACtBM,EAET,IAAK,WACH,MAAME,EAAW,KAAK,QAAQ,IAAI,UAAU,GAAK,CAAC,EAC5CC,EAAgBD,EAAS,UAAWE,GAAWA,EAAE,MAAQnB,EAAK,GAAG,EACjEoB,EAAU,CACd,GAAI,KAAK,SAAS,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,EAC1C,GAAGpB,EACH,UAAW,IAAI,KAAK,EAAE,YAAY,CACpC,EAEA,OAAIkB,GAAiB,EACnBD,EAASC,CAAa,EAAIE,EAE1BH,EAAS,KAAKG,CAAO,EAElB,KAAA,QAAQ,IAAI,WAAYH,CAAQ,EAC9BG,EAET,QACS,MAAA,CAAE,QAAS,EAAK,CAAA,CAC3B,CAGM,aAAad,EAAkBC,EAAiBL,EAAmB,CACzE,OAAQI,EAAU,CAChB,IAAK,OACH,MAAMe,EAAQnB,GAAA,YAAAA,EAAU,MAAM,KAAK,MACnC,GAAImB,EAAO,CAET,MAAMC,GADO,KAAK,QAAQ,IAAI,MAAM,GAAK,CAAC,GAChB,OAAQvB,GAAaA,EAAI,KAAOsB,CAAK,EAC1D,YAAA,QAAQ,IAAI,OAAQC,CAAY,EAC9B,CAAE,QAAS,EAAK,CAAA,CAEzB,MAEF,IAAK,QACH,MAAMC,EAASrB,GAAA,YAAAA,EAAU,MAAM,KAAK,MACpC,GAAIqB,EAAQ,CAEV,MAAMC,GADQ,KAAK,QAAQ,IAAI,OAAO,GAAK,CAAC,GAChB,OAAQC,GAAcA,EAAK,KAAOF,CAAM,EAC/D,YAAA,QAAQ,IAAI,QAASC,CAAa,EAChC,CAAE,QAAS,EAAK,CAAA,CAEzB,MAEF,QACS,MAAA,CAAE,QAAS,EAAK,CAAA,CAC3B,CAEJ,CAEa,MAAAE,EAAY,IAAI5B"}